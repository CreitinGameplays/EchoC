-- compute the square root with binary search --

funct: binary_search_sqrt(x, precision=0.000001):
    if: x < 0:
        raise: "Cannot compute square root of a negative number.":
    elif: x == 0:
        return: 0.0:

    let: low = 0:
    let: high = x if x >= 1 else 1:  -- Adjust high for numbers less than 1 --
    
    loop: while (high - low) > precision:
        let: mid = (low + high) / 2:
        if: mid * mid == x:
            return: mid:
        elif: mid * mid < x:
            let: low = mid:
        else:
            let: high = mid:
    return: (low + high) / 2:
    

'''
This will run when module is first loaded
Example code:
load:binary_search_sqrt from sqrt:
let: test_sqrt_val = binary_search_sqrt(16):
show("Test sqrt(16) from within sqrt.ecc: %{test_sqrt_val}"):
'''